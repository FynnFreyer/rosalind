import unittest
from reverse_complement import reverse_complement


class ReverseComplementTestCase(unittest.TestCase):
    def test_reverse_complement_produces_sample_output(self):
        sample_input = 'AAAACCCGGT'
        sample_output = 'ACCGGGTTTT'
        self.assertEqual(reverse_complement(sample_input), sample_output)

    def test_reverse_complement_accurately_handles_empty_input(self):
        self.assertEqual(reverse_complement(''), '')

    def test_reverse_complement_accurately_handles_dataset(self):
        dataset = 'TATCACCCACGGAGGCGGGTCCCTAAAACTATCTACGCGTAGAGTACTGGGGGAAACTATTCCCCATTAGTTATGACCTCACGCATAGCTCGCATCTC' \
                  'CAGCCCGTGTATTGACCGGAAGCATCTGGCAACTTAGATCATATGTTAGAAGCACTACGCATATTTTTGGTTCTGTATCAAAGTTCTGAGATGCTTCT' \
                  'ATCCTGGAGGCTGGATGAACTCCAGCACCCGAAGGTGGTCCGCCTCTGAATTCATGGTACCGTCCGACTGATAAACGCCTATTAATTCGGCCGCACTC' \
                  'TGTTCGAGCTCATAATTATTGACCTCAGCCCATCTCGGAGGACACTGCGGTCGTACTCAATGAGGTAATCCTTGGCTCACATAGGGCCAATGTGGAGG' \
                  'GGCATTTCCTAGTGATGGATCCGACATAGGCAGTACTCGTTTCCCCACGTTCCTAATAGGTATTGCCATTAGTCGCTAATATCGGAAGATAAAGATTT' \
                  'GCTACCTGCTACCGACCGTAGTGCCCTGTTGATAATTCACCTCACATCAACGAGAGGTTGATCAGCGCAGCCAACCAAATCTACGCATCAGAGGGTAA' \
                  'GACTGGCCAAAGCTGAGCCGCTCGGCGGGCCACTACCGCCACGTGCCTAAGCCGCGCATGCGTGGCACGCAACTAACATACTCCTTAATTCCGTGCAG' \
                  'AGTGGGGGAGTGTACTCCATCTGGAGATGCGTCTCGGCTATGTCTGCTTTTAATGTTCGGCTCGACGAGAAACCCTTAAAGGAAATCTCTGCACAGTC' \
                  'GAGAGGATCCTCATTCCGTAGACCTGCGTTGACGATTGTTGAATTGCCTTAAATATCGCTGAATCGGCGCCACGAGTAAAACACAATGTTTGAATCAC' \
                  'TATAGGCACACAAGCATCCTAAACCCGAACGAATCCGATTCGTGAACAACGCTCCATATAGTGGAACTGGCTTAACTACCTCTCATCGCGGATCTTCA' \
                  'TGCCTAAACGAAATCCGTTT'

        expected = 'AAACGGATTTCGTTTAGGCATGAAGATCCGCGATGAGAGGTAGTTAAGCCAGTTCCACTATATGGAGCGTTGTTCACGAATCGGATTCGTTCGGGTT' \
                   'TAGGATGCTTGTGTGCCTATAGTGATTCAAACATTGTGTTTTACTCGTGGCGCCGATTCAGCGATATTTAAGGCAATTCAACAATCGTCAACGCAGG' \
                   'TCTACGGAATGAGGATCCTCTCGACTGTGCAGAGATTTCCTTTAAGGGTTTCTCGTCGAGCCGAACATTAAAAGCAGACATAGCCGAGACGCATCTC' \
                   'CAGATGGAGTACACTCCCCCACTCTGCACGGAATTAAGGAGTATGTTAGTTGCGTGCCACGCATGCGCGGCTTAGGCACGTGGCGGTAGTGGCCCGC' \
                   'CGAGCGGCTCAGCTTTGGCCAGTCTTACCCTCTGATGCGTAGATTTGGTTGGCTGCGCTGATCAACCTCTCGTTGATGTGAGGTGAATTATCAACAG' \
                   'GGCACTACGGTCGGTAGCAGGTAGCAAATCTTTATCTTCCGATATTAGCGACTAATGGCAATACCTATTAGGAACGTGGGGAAACGAGTACTGCCTA' \
                   'TGTCGGATCCATCACTAGGAAATGCCCCTCCACATTGGCCCTATGTGAGCCAAGGATTACCTCATTGAGTACGACCGCAGTGTCCTCCGAGATGGGC' \
                   'TGAGGTCAATAATTATGAGCTCGAACAGAGTGCGGCCGAATTAATAGGCGTTTATCAGTCGGACGGTACCATGAATTCAGAGGCGGACCACCTTCGG' \
                   'GTGCTGGAGTTCATCCAGCCTCCAGGATAGAAGCATCTCAGAACTTTGATACAGAACCAAAAATATGCGTAGTGCTTCTAACATATGATCTAAGTTG' \
                   'CCAGATGCTTCCGGTCAATACACGGGCTGGAGATGCGAGCTATGCGTGAGGTCATAACTAATGGGGAATAGTTTCCCCCAGTACTCTACGCGTAGAT' \
                   'AGTTTTAGGGACCCGCCTCCGTGGGTGATA'

        self.assertEqual(reverse_complement(dataset), expected)


if __name__ == '__main__':
    unittest.main()
